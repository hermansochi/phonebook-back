version: "3.9"
services:
    api:
        image: ${REGISTRY}/herman-team-api:${IMAGE_TAG}
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.api-http.rule=Host(`api.herman.team`)
                - traefik.http.routers.api-http.entrypoints=http
                - traefik.http.routers.api-http.middlewares=https-redirect
                - traefik.http.routers.api-https.rule=Host(`api.herman.team`)
                - traefik.http.routers.api-https.entrypoints=https
                - traefik.http.routers.api-https.tls=true
                - traefik.http.routers.api-https.tls.certresolver=le
                - traefik.http.services.api.loadbalancer.server.port=80
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s
            placement:
                constraints: 
                    - node.labels.back.manager == true

    php-fpm:
        image: ${REGISTRY}/php-fpm:${IMAGE_TAG}
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s
            placement:
                constraints: 
                    - node.labels.back.manager == true

    appinit:
        image: ${REGISTRY}/appinit:${IMAGE_TAG}
        command: sh -c 'wait-for-it api-postgres:5432 -t 60 && php artisan migrate:fresh --force && php artisan github:get && php artisan route:cache && php artisan config:cache && php artisan schedule:work'
        deploy:
            restart_policy:
                condition: on-failure
                delay: 60s
                max_attempts: 5
                window: 120s
            placement:
                constraints: 
                    - node.labels.back.manager == true

    api-postgres:
        image: postgres:15.1-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD_FILE: run/secrets/api_db_password
            POSTGRES_DB: app
            POSTGRES_HOST_AUTH_METHOD: trust
        secrets:
            - api_db_password
        volumes:
            - api-postgres:/var/lib/postgresql/data
        deploy:
            endpoint_mode: dnsrr
            placement:
                constraints: 
                    - node.labels.back.manager == true

    minio:
        image: minio/minio:RELEASE.2022-10-21T22-37-48Z
        env_file: minio.env
        command: minio server --console-address ":9001" /data
        volumes:
            - minio-storage:/data
        networks:
            - traefik-public
        deploy:
            labels:

                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                #- traefik.http.middlewares.redirect-https.redirectScheme.scheme=https
                #- traefik.http.middlewares.redirect-https.redirectScheme.permanent=true

                - traefik.http.routers.minio-https.rule=Host(`storage.herman.team`)
                - traefik.http.routers.minio-https.entrypoints=https
                - traefik.http.routers.minio-https.service=minio
                - traefik.http.routers.minio-http.rule=Host(`storage.herman.team`)
                - traefik.http.routers.minio-http.entrypoints=http
                - traefik.http.routers.minio-http.middlewares=https-redirect
                - traefik.http.routers.minio-http.service=minio
                - traefik.http.services.minio.loadbalancer.server.port=9000

                - traefik.http.routers.minio-console-https.rule=Host(`console.storage.herman.team`)
                - traefik.http.routers.minio-console-https.entrypoints=https
                - traefik.http.routers.minio-console-https.service=minio-console
                - traefik.http.routers.minio-console-http.rule=Host(`console.storage.herman.team`)
                - traefik.http.routers.minio-console-http.entrypoints=http
                - traefik.http.routers.minio-console-http.middlewares=https-redirect
                - traefik.http.routers.minio-console-http.service=minio-console
                - traefik.http.services.minio-console.loadbalancer.server.port=9001


            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s
            placement:
                constraints: 
                    - node.labels.back.manager == true
        healthcheck:
            test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    mc-service:
        image: minio/mc
        networks:
            - traefik-public
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc alias set myminio http://minio:9000 local secret123456;
            /usr/bin/mc mb myminio/pet;
            /usr/bin/mc anonymous set download myminio/pet;
            exit 0;
            "
        deploy:
            placement:
                constraints: 
                    - node.labels.back.manager == true


secrets:
    api_db_password:
        file: ./secrets/api_db_password

volumes:
    api-postgres:
    minio-storage:

networks:
    traefik-public:
        external: true