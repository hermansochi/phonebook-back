version: "3.9"
services:
    traefik:
        image: "traefik:2.9"
        container_name: "traefik"
        command:
            --api.dashboard=true
            --api.insecure=true
            --providers.docker=true
            --providers.docker.exposedByDefault=false
        ports:
            - "80:80"
            - "8080:8080"
        networks:
            - traefik-public
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.traefik.entrypoints=http
            - traefik.http.routers.traefik.rule=Host(`traefik.localhost`)
            - traefik.http.services.traefik.loadBalancer.server.port=80

    herman-team-api:
        build:
            context: api/docker
            dockerfile: development/nginx/Dockerfile
        volumes:
            - ./api:/app:rw
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            - traefik.http.routers.api.entrypoints=http
            - traefik.http.routers.api.rule=Host(`api.localhost`)
            - traefik.http.services.api.loadBalancer.server.port=80

    php-fpm:
        build:
            context: api/docker
            dockerfile: development/php-fpm/Dockerfile
        volumes:
            - ./api:/app:rw


    php-cli:
        build:
            context: api/docker
            dockerfile: development/php-cli/Dockerfile
        volumes:
            - ./api:/app:rw

    api-postgres:
        image: postgres:15.1-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD: secret
            POSTGRES_DB: app
        volumes:
            - api-postgres:/var/lib/postgresql/data
        ports:
            - "54321:5432"

    minio:
        image: minio/minio:RELEASE.2022-10-21T22-37-48Z
        command: server --console-address ":9001" /data
        environment:
            MINIO_ROOT_USER: local
            MINIO_ROOT_PASSWORD: secret123456
            MINIO_BROWSER_REDIRECT_URL: http://console.storage.localhost
            MINIO_DEFAULT_BUCKETS: 'team:anonymous download'
        volumes:
            - minio-storage:/data
        networks:
            - traefik-public
            - default
        labels:
            - traefik.enable=true
            - traefik.docker.network=traefik-public
            # Console
            - "traefik.http.routers.storage-console.rule=Host(`console.storage.localhost`)"
            - "traefik.http.routers.storage-console.entrypoints=http"
            - "traefik.http.routers.storage-console.service=storage-console"
            - "traefik.http.services.storage-console.loadbalancer.server.port=9001"
            # APi
            - "traefik.http.routers.storage.rule=Host(`storage.localhost`)"
            - "traefik.http.routers.storage.entrypoints=http"
            - "traefik.http.routers.storage.service=storage"
            - "traefik.http.services.storage.loadbalancer.server.port=9000"
        healthcheck:
            test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    mc-service:
        image: minio/mc
        depends_on:
            minio:
                condition: service_healthy
        restart: on-failure
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc alias set myminio http://minio:9000 local secret123456;
            /usr/bin/mc mb myminio/pet;
            /usr/bin/mc anonymous set download myminio/pet;
            exit 0;
            "
        networks:
            - default

volumes:
    api-postgres:
    minio-storage:

networks:
    traefik-public:
        external: true
